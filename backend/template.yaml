AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

Parameters:
  EnvType:
    Type: String
    AllowedValues:
      - dev
      - stage
      - prod
    Default: dev
    ConstraintDescription: must specify dev, stage, or prod.
  FrontendUrl:
    Type: String
  BackendDomain:
    Type: String
  AcmCertificateArn:
    Type: String
  UserPoolArn:
    Type: String

Resources:
  Api:
    Type: AWS::Serverless::Api
    Properties:
      OpenApiVersion: 3.0.1
      StageName: !Ref EnvType
      Auth:
        DefaultAuthorizer: CognitoAuthorizer
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: !Ref UserPoolArn
        AddDefaultAuthorizerToCorsPreflight: False
      Cors:
        AllowOrigin: !Sub
          - "'${FrontendUrl}'"
          - FrontendUrl: !Ref FrontendUrl
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowCredentials: True
      Domain:
        CertificateArn: !Ref AcmCertificateArn
        DomainName: !Ref BackendDomain
        EndpointConfiguration: EDGE

  UserFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handler.user
      Runtime: python3.8
      CodeUri: ./src
      Environment:
        Variables:
          FRONTEND_URL: !Ref FrontendUrl
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /user
            Method: get
  AdminFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handler.admin
      Runtime: python3.8
      CodeUri: ./src
      Environment:
        Variables:
          FRONTEND_URL: !Ref FrontendUrl
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /admin
            Method: get

Outputs:
  Region:
    Description: "Region"
    Value: !Ref AWS::Region
  ApiId:
    Description: "API ID"
    Value: !Ref Api
